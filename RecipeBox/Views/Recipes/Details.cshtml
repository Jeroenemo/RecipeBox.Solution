@{
  Layout = "_Layout";
}

@model RecipeBox.Models.Recipe

<div class="header">@Html.DisplayFor(model => model.Name)</div>

<hr>

<td>Description: @Html.DisplayFor(model => model.Description)</p>

<p>Ingredients: @Html.DisplayFor(model => model.Ingredients)</p>

<p>Instructions: @Html.DisplayFor(model => model.Instructions)</p>

@* Here is where we could get fun and use a conditional to render boxing gloves instead of the word *@
<p>Rating: 
@for (int i = 0; i < (int) Model.Rating+1; i++)
{
  <img src="~/img/glove.png" height="20px">
  @* <span class="glove"></span> *@
}
</p>

@if(@Model.JoinEntities.Count == 0)
{
  <p>This recipe is not associated with any tags yet</p>
}
else
{
  <h4>Tags associated with this recipe</h4>
  <ul>
    @foreach (var join in Model.JoinEntities)
    {
      <li>@Html.ActionLink($"{@join.Tag.Name}", "Details", "Tags", new { id = join.Tag.TagId })</li>
      @using (Html.BeginForm("DeleteTag", "Recipes"))
      {
        @Html.Hidden("joinId", @join.TagRecipeId)
        <input type="submit" value="Delete" class="btn btn-default">
      }
    }
  </ul>
}
<tr>
<td>@Html.ActionLink("Add a Tag", "AddTag", new { id = Model.RecipeId })</td> |
<td>@Html.ActionLink("Edit Recipe", "Edit", new { id = Model.RecipeId })</td> |
<td>@Html.ActionLink("Delete Recipe", "Delete", new { id = Model.RecipeId })</td> |
<td>@Html.ActionLink("Back to Recipes", "Index")</td>
</tr>